"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _LayoutModule = _interopRequireDefault(require("./Layout.module.css"));

var _PropTypes = require("../PropTypes");

var _camelCase = _interopRequireDefault(require("./camelCase"));

/* eslint-disable react/prop-types */
function Flex(_ref, ref) {
  let className = _ref.className,
      style = _ref.style,
      direction = _ref.direction,
      pad = _ref.pad,
      grow = _ref.grow,
      flex = _ref.flex,
      wrap = _ref.wrap,
      inline = _ref.inline,
      alignSelf = _ref.alignSelf,
      alignContent = _ref.alignContent,
      align = _ref.align,
      justify = _ref.justify,
      Component = _ref.as,
      props = (0, _objectWithoutPropertiesLoose2.default)(_ref, ["className", "style", "direction", "pad", "grow", "flex", "wrap", "inline", "alignSelf", "alignContent", "align", "justify", "as"]);
  const combinedStyle = style || flex != null ? (0, _extends2.default)({}, style, {
    flex: flex === true ? 1 : flex
  }) : style;
  return _react.default.createElement(Component, (0, _extends2.default)({}, props, {
    ref: ref,
    style: combinedStyle,
    className: (0, _classnames.default)(className, inline ? _LayoutModule.default.flexInline : _LayoutModule.default.flex, grow && _LayoutModule.default.grow, wrap && _LayoutModule.default.wrap, pad && _LayoutModule.default[`pad${pad === true ? '3' : pad}`], align && _LayoutModule.default[(0, _camelCase.default)(`align-${align}`)], alignContent && _LayoutModule.default[(0, _camelCase.default)(`align-content-${alignContent}`)], alignSelf && _LayoutModule.default[(0, _camelCase.default)(`self-${alignSelf}`)], direction && _LayoutModule.default[(0, _camelCase.default)(direction)], justify && _LayoutModule.default[(0, _camelCase.default)(`justify-${justify}`)])
  }));
}

const DecoratedFlex = _react.default.forwardRef(Flex);

DecoratedFlex.propTypes = _PropTypes.propTypes;
DecoratedFlex.defaultProps = _PropTypes.defaultProps;
var _default = DecoratedFlex;
exports.default = _default;